//Written by: Max Manning

"use strict";

var slider = document.getElementById("myRange");

let reset = document.getElementById("restart_button");
reset.addEventListener("click", resetSite);

let canvas = document.getElementById("myCanvas");
canvas.addEventListener("click", click);
let context = canvas.getContext("2d");
let WIDTH = canvas.clientWidth;
let HEIGHT = canvas.clientHeight;

var flightSound = new Audio("./sounds/flight.m4a");
var bombDropSound = new Audio("./sounds/drop.wav");
var boomSound = new Audio("./sounds/boom.mp3");

let planeSprites = ["./planes/plane1.png", "./planes/plane2.png","./planes/plane3.png","./planes/plane4.png"];
let plane = {sprite: 0, pos:{x:0, y:0}, target:{x:0, y:0}, speed:1/1.5, spawn:{x: 0, y: 0}, angle: 0};

let bomb = {active: false, radius: 5, explosion:{active: false, radius: 0.5, peaked: false}};
const craters = [];
let backfill = false;

let isAnimating = false;
let timer = 0;
let requestId;

const uk = [[159.5437083302358,543.4213191937254],[156.33095397427377,546.601542605566],[146.13230227774045,549.807711896058],[141.73767566361843,553.0768926061318],[134.03970555431613,560.4640549135892],[132.5586784643221,561.0756363389431],[120.94220140283127,559.3001969283698],[112.29831214216654,549.7261677060109],[106.7723746499121,545.800926921466],[104.49079237613729,545.3561404302995],[102.13126130815208,546.5237049696117],[97.08565692616583,547.717215387575],[91.93892978412329,547.5133549124571],[94.56601482142494,543.0914358794431],[98.13269883758451,540.619164299376],[90.14400079312,538.9030297542918],[87.92351352021197,537.5575506185135],[85.39333779463186,534.4588713967198],[79.12794011946346,533.928834161413],[76.13849852529361,534.7183301832337],[71.09710759164328,538.8140724560587],[63.1294767888572,543.1729800694908],[53.5312414801594,537.1312968978117],[51.649936798275185,534.4848172753711],[51.69839145413516,529.3734791810494],[50.25949884749798,525.3259221114342],[47.59659949934396,523.8988987856084],[51.003172478746656,518.624472311192],[55.113391330210945,515.1143655850697],[64.15545145859745,511.6264981835053],[77.84915854958315,503.3497628937149],[85.52816814137438,499.82482995122064],[92.66574962202945,493.74237468451827],[95.615163457011,490.0358205914639],[97.75559521153995,484.9615480380728],[99.87917317272642,478.7345371617415],[102.90864252608704,473.67879737881515],[99.96976231194469,472.4741672985725],[98.65516643120957,468.66012313681983],[99.00909609140729,464.7904806636708],[100.3658264554991,461.35821157350284],[99.1502466106529,457.0549022714665],[96.9887476144455,452.55514560249884],[97.10883089201161,449.05245198456254],[97.6818598656654,445.30883235057763],[92.17277616675347,445.50898627160234],[86.68054626118403,446.6802573650077],[81.70235705256901,449.3341500956343],[76.875851984039,452.94062722817625],[72.58866830247655,453.60780696492606],[72.65819020001516,450.7241078805297],[74.51842764022112,447.1584028430116],[79.37864029543738,442.0655975191551],[84.58224899001195,437.8438324071659],[86.4319528093787,434.63766311667393],[87.88980593352696,430.9125762531544],[90.47264976330317,427.92138710005963],[97.26894192876848,422.2725986622451],[110.28849728604413,415.91585839265696],[112.23300369296383,415.54149642925825],[117.33759635164954,416.2791006937764],[122.35581331945406,415.319103183675],[126.75043993357606,413.0321593082606],[131.1324262026915,412.5391876138842],[140.99610875653715,419.1331473454282],[138.06144199073074,408.9327104813423],[142.4118273973285,406.4900913340197],[148.71935955585383,415.71199791753895],[151.06625027883126,416.6831150899191],[156.0128386249286,415.3450490623263],[154.10414652886197,413.7882963432435],[151.8752323592838,413.6956324909171],[148.95531266265135,412.30567470602176],[146.50097900711316,409.3478445397648],[142.41814756983183,399.9628495761509],[142.63935360745543,394.39189877429067],[145.3907353706604,388.5985547268467],[148.4370585173622,383.2685299410345],[145.88160210176775,382.20845547042074],[143.83386621062317,380.16985071924086],[143.2481968919628,374.8361193793359],[144.05085879991088,370.1250891270637],[149.5262349121378,365.96633543465686],[151.1420923488744,359.6540738141852],[151.828884427591,352.71169799789493],[150.91877958708235,349.527768031961],[145.48553795821337,350.03927249680254],[142.8437058517365,351.3365664293716],[140.47364116291206,353.39370395101673],[138.04458819738826,353.27138766594584],[131.33256499863666,345.5914075851374],[127.5046471856652,339.7832373213214],[120.63883312266123,327.48859739465985],[119.66131310878114,320.1422071822263],[125.15986318685388,304.2966884344191],[133.64574813493033,294.16296954400883],[143.6421543113499,290.6343300474212],[141.70818152526815,289.9597372024855],[126.47656579175636,289.822594701042],[121.45624209978448,291.0642903222152],[116.80248841301791,295.2045112441573],[114.17329665154766,296.47585929807445],[111.41138126750471,296.9465916678923],[108.89384588693117,299.0074357436307],[106.43529878305708,301.86889550346854],[103.87562891912667,303.69993322543763],[98.78999677795207,303.2254943015266],[96.32302277740605,303.82966261869456],[94.55126775224979,302.1728329390994],[93.06813393808716,299.43368946433196],[91.12573425533478,298.7034983080004],[88.95791508662408,299.5448860871236],[84.3736832973949,303.2366139638059],[79.73256995563492,305.416067770522],[74.12025677249936,303.08835180008373],[66.76357597838802,298.75168351121016],[65.31204302674305,300.3343821089443],[63.68143852083256,304.3596998540009],[62.743946266142004,310.6460155958212],[57.51927032988899,305.18626141675213],[53.06776216323374,297.8880564075284],[51.574094728233106,293.30304899442035],[51.46243834733762,288.14352569688884],[53.87885096785366,286.1419864866395],[56.50382928098796,287.97302420860814],[60.41601606067443,275.72656948515686],[68.19825513668926,259.7883868850234],[70.94542345155827,255.11442217368165],[72.8604357201277,249.01714069060733],[72.53178674994403,245.0251819323879],[70.8148065531517,241.65592426180126],[63.58031576077507,234.0018900596441],[63.67511834832805,227.77117262922008],[64.4503928420956,220.7324264065096],[66.41807321486112,216.51066129452101],[67.24812253699213,215.70633905632832],[76.8589981906965,215.81753567911994],[73.11113589610162,213.63808187240386],[65.64069199692744,207.27763504872246],[65.77341561950136,205.0240501601454],[67.53042357548249,199.14174881446831],[66.71722804669521,199.73850402345022],[65.11611767913331,202.45540817365912],[62.059260911592716,209.0308351347373],[60.192703298882236,210.5653485292621],[54.90903908592984,212.12580780243763],[53.95258631372819,215.36533607976742],[53.10357647408732,216.21043041298338],[50.46385109177909,216.57737926819607],[49.654869011326525,219.59822085403533],[49.06709296849879,219.79096166687407],[48.31709916474561,216.53290061907956],[48.243363818871074,211.13245130549893],[49.294619178625695,206.16566882080622],[51.30232731058074,202.2812001312857],[59.04453862740728,193.44848172753717],[55.27560909113517,196.1727989859321],[46.73284259052794,204.33463109883758],[42.369816838922375,209.70172142558033],[41.20479837410491,211.51422637708367],[40.84033509306815,213.0413266634219],[40.86561578308252,214.80193985762276],[42.824869259177405,224.2425331326325],[42.26658735469876,228.6125604083433],[34.905693112251484,257.4977364555156],[33.51104171313854,260.39626175628405],[32.23015341908966,261.91224238034306],[31.018787022579385,262.26065846509044],[27.3889012813845,261.7083819052251],[25.768830396312005,259.54375431488154],[25.78357746548716,257.09001550527967],[26.464049371700508,253.40940729087663],[29.51669269090689,239.70627680885502],[30.841822192480002,235.89964575528836],[32.809502565246746,232.35988659642146],[37.14724762683794,226.16252815283417],[37.04191141844575,225.75851375669146],[34.15359258433095,226.9742634992134],[32.92326567031081,226.57395565716342],[32.04054824398371,225.34708625236226],[32.613577217637506,206.96628450490613],[34.95625449228022,200.91718822504157],[35.832651746102826,192.1215353622236],[37.86353384390489,184.58981744513738],[40.21463801521825,179.10411738741698],[42.00324683371826,172.0839039351718],[44.69985376855852,168.9629853888202],[45.42246015812875,164.1889437169661],[48.44771606315237,159.02200731124861],[50.78617988945898,153.61785144357526],[49.52635883708853,154.1515952329754],[34.5707239695638,168.21796801611657],[30.763873398270757,170.77919689441677],[25.57079832453541,170.09348438720173],[21.599623268149553,168.51078578946766],[18.49641856891443,165.18230021390474],[17.110194066473348,158.7922009574794],[13.27806280516593,158.6216994691987],[10.0,157.51714634946836],[10.040027759189526,156.65722579987988],[14.270329888219942,153.17306495240882],[21.047661536174193,151.97955453444536],[27.39100800555185,146.40489717849198],[21.74709395989863,142.63903821994847],[22.223213621830872,141.44552780198524],[27.14662800208244,138.23935851149315],[33.401492056410405,127.48293853344921],[34.66974000545272,117.58643910499472],[31.67819168711407,112.93842027230426],[30.59533546484324,109.89163280781372],[24.616452276501114,106.49642925857574],[23.617865020943817,102.14864130742342],[24.313083996332324,99.72455493056566],[26.263910575755332,97.35606686510414],[29.20279078989765,95.51020292676299],[33.81230326913998,93.74588317846894],[29.628349071802376,91.85554059101128],[28.067266463430496,89.62419502699265],[26.88328748110195,86.39207985784935],[26.773737824373818,84.52027004085687],[28.939450268917156,76.17681677739142],[30.201378045456178,72.7371345790375],[32.6662453218336,68.34857453286088],[43.85505737725236,68.59691365709546],[45.14226584380575,66.65838586642838],[46.410513792846835,66.5842547845674],[52.13026990854317,68.34857453286088],[51.281260068902306,66.44711228312383],[41.925298039507055,56.03169528164176],[41.086821820706135,54.048688841857825],[43.753934617196094,48.433259390880494],[43.947753240637255,45.931335378068866],[43.55590254541827,43.255203322883176],[44.3185366941778,41.220305125796585],[47.28480432250207,40.256601061602396],[56.32686445088858,40.35297146802213],[58.55577862046724,39.4040936202],[57.54033757156743,36.69830913227031],[55.43572012789083,33.140017202938225],[55.024908915161255,30.152534603936147],[55.51788237043723,27.513468089681623],[55.63375219966865,22.201976074334652],[56.044563412398226,19.85202077933843],[58.191315339430474,16.334500945030186],[59.96517708875533,15.28925269078843],[62.16459711998491,14.67767126543447],[67.12803925942478,15.852648912933091],[69.0198775621484,17.272259130572365],[71.19191017919626,20.626690584786616],[72.79723399509237,20.356112135994067],[78.97836270354702,16.71256946252106],[80.83649341958565,16.189945335400694],[83.36666914516574,20.411710447389964],[93.92135722606396,17.042452776803202],[108.12067811733223,15.53388526093022],[116.65080427293289,13.317365913283652],[125.63598284878735,12.513043675090898],[134.02495848514224,10.0],[142.91533447344375,11.152738322939513],[143.2123825811092,12.616827189695982],[142.74679654001622,14.648018832690468],[140.47364116291206,20.211556526364575],[140.84231789228477,26.420034632230568],[140.3345973678349,28.30296411150232],[139.30440924975866,30.62326697375454],[136.04320023793647,34.95622870853481],[127.47304632314754,41.149880598028744],[111.76741765186986,55.3867548694501],[102.48940441668555,62.451446970811844],[101.21272957097263,65.8503570741425],[100.52383076808741,70.57621354278672],[106.07926239869217,71.51397172832958],[108.22390760155706,73.11520309652894],[106.89456465164679,75.51705014882816],[98.676233672888,83.85679685820048],[96.25560760403481,91.39592788347272],[102.55681959005682,91.12905598877296],[107.74778793962359,89.67979333838844],[118.10023050040925,84.97988274839543],[127.82697598334506,81.4883087927384],[132.49758346345538,81.34375318310947],[141.58388479936607,84.12737530699292],[143.65058120802053,84.21633260522663],[147.50588643517497,82.93015833493689],[151.40543286985488,82.70035198116705],[177.81743376211355,83.56768563894207],[185.155154038715,81.933095283905],[190.01115324559532,83.88644929094448],[194.07291744119823,88.76798103149736],[197.9324361166886,97.77120092352607],[197.8144595632886,99.26864877711978],[195.48231590948512,103.37180415813134],[191.17827843458014,108.51650123929039],[187.4746573475107,115.59972611111732],[186.3875876769037,119.42118338105661],[185.66076783899757,123.60217639802136],[184.48732247750823,127.46811231707716],[177.12221478672504,145.62652081895055],[169.9424988227131,155.69352173568575],[166.73606463925432,162.83975802709455],[162.77963665204365,168.5330251140262],[158.970679356582,172.11355636791632],[154.90470171264315,174.50057720384365],[143.1597144769131,177.05068641986458],[139.87322477507655,178.8780175877405],[135.95261109871944,182.0174689045573],[131.83185862641596,183.5705150695474],[136.66257714328188,183.37406770261543],[141.4511611767922,181.62828072478663],[150.1603588866581,180.98704686668873],[160.18836592559575,187.00278415971542],[159.25930056757687,191.92508799529162],[155.23335068282634,195.81696979299863],[146.077527449377,196.42855121835265],[137.5158004312587,205.0796484715417],[133.65206830743358,207.7409543103543],[129.57555704265553,209.06419412157504],[124.47728455647317,208.6712993877111],[115.21401839046302,206.35470307955217],[111.16068109153079,203.93432325678765],[114.8242744194119,207.8855099199837],[118.98084120256755,209.9463539957216],[143.10283292438112,214.80935296580873],[144.55436587602605,214.30526160915372],[152.2439090886565,209.16797763618018],[162.49312216521733,209.09014000022637],[182.0056014077883,218.5270267211423],[187.62423476342715,225.73998098622621],[195.67402780875963,236.08126690584777],[200.05390735370648,240.1177043131837],[203.22031377797694,243.77607320302872],[205.17114035739993,249.26177326074907],[208.9506035145125,267.37199655941214],[213.26096116192073,285.06708579965374],[218.9090886559099,304.2373835689305],[221.4687585198403,309.56370180064954],[224.83530374005593,313.2999083264483],[241.88080898208088,321.88428760596184],[245.67501920836733,324.7309211494276],[252.28802637123,332.9891236687527],[258.6629737031253,341.7884830856635],[264.59550895977463,348.54923775139486],[271.00205715418736,354.0201115927427],[267.8988524549537,356.86303858211573],[265.7731677695987,361.33314281833896],[267.36163779215303,367.411891530948],[269.97186903611265,373.2163552406713],[275.09752893647675,382.5049797978651],[279.6185590006694,392.6424052423686],[277.9521401839053,391.1115984019376],[276.1993456762589,390.27021062281386],[273.8040002974201,390.5222563011417],[271.4613230227774,390.0329911608586],[267.14253847869725,386.8601808572039],[262.9922918680447,382.96459250540414],[254.7360398542649,384.52875833267296],[250.1497013408684,383.82821960908535],[246.17009938781067,383.932003123691],[253.7142786328606,386.1818814581754],[261.9705306466403,386.3375567300836],[280.1789476293166,403.34693346310956],[286.33479564775564,413.4250540421246],[289.9920688031335,426.7501160066548],[287.5019208367417,432.73620086693757],[283.62554836790883,436.613256448272],[280.0104096958891,441.05000169765793],[276.622797233995,446.05755627737454],[286.7140059979676,453.4150661520873],[288.8881453391828,453.1926729065041],[291.1212729570974,452.1622508686349],[293.2659181599623,449.6603268558232],[296.88527028031916,443.57045848093486],[298.7518278930284,441.4021243364981],[305.0382928098753,440.62004142286395],[310.3135301261558,441.0870672385885],[315.56770020075913,442.43254637436735],[320.18563957667334,442.00629265366604],[329.4931469502077,444.61941328926935],[334.2754108112135,446.9767816924521],[346.12362753116713,457.5886460608667],[348.68540411926614,463.39310977058943],[349.8609562049228,470.8877621467451],[350.0,479.2015629774661],[348.0070389372201,486.79999886822736],[345.71913649094205,493.66083049447116],[344.3076312984866,502.51949477687094],[343.3048305945919,505.7108378509904],[341.9059657471445,508.20905530970936],[335.6279277269695,515.1996163292094],[331.4566138746385,518.0721957513265],[329.6953924703202,516.8119673596881],[327.81619451260315,516.986175402062],[327.61816244082655,518.6652444062153],[329.6026966069358,522.2346559978266],[329.6279772969489,526.5416718539557],[325.92014276154356,529.7293083739823],[322.15331994943864,531.0896137261337],[315.8500012392495,529.3920119515147],[307.09866904602643,535.3299116085876],[313.3893474112077,538.3804056271714],[314.6575953602503,541.6273470126866],[313.0817656827033,547.3354403159908],[309.12533769549253,549.8818429779185],[304.7391379780412,551.0086354222074],[300.24760205219764,551.2792138710005],[296.5271271717857,552.6765847640818],[292.95833643145755,555.367543035639],[297.4372320122933,553.9368131557203],[300.5425434356958,555.1896284391728],[302.4933700151188,559.9933225437708],[304.2630183161077,561.3684541122942],[313.014350509332,563.4218850798466],[318.43284506902694,563.407058863474],[328.8821969415329,562.2394943241619],[333.9004139093375,562.2691467569065],[335.6911294520048,563.1364804146809],[335.7206235903537,567.1173195106217],[334.94113564825165,576.8952092080984],[333.5591245941465,578.9115746347203],[319.70530646640395,587.1252985049294],[316.8654422881505,592.8630442409766],[316.0691005527058,596.3397919802616],[307.96663940317836,595.7245040008154],[304.1703224527226,599.4014056611242],[297.60998339405677,601.8403182543545],[292.53699159788874,604.4386126735852],[287.5735494584489,607.7189130459383],[283.49071802116634,608.7011498805978],[265.84479639130586,604.805561528798],[255.1931989986873,605.1243251808003],[240.7621384489562,608.5195287300382],[237.045877016879,607.9598390619868],[231.47148486876438,604.7091911223783],[225.76436909807458,602.5112045451971],[219.19770986690475,601.5437939269102],[213.52851513123716,598.5414851115356],[217.06570500904644,604.3162963885144],[209.2013036904852,609.8835406362824],[205.57352467345765,610.9918003101054],[201.8172354821923,610.8175922677315],[194.1319057178976,612.3298663376987],[187.01117803058503,611.5589030863423],[188.0813939078493,615.5175028577249],[189.98797927974832,618.9683047183581],[188.44164374055157,620.4694591260452],[186.8047190621366,620.8438210894438],[173.24373559372478,618.2381135620266],[171.3224031526509,618.7310852564029],[169.64966416338353,621.1366388627949],[164.71782288646008,619.8393449302259],[159.9250254046151,615.7843747524247],[154.82885964260132,613.0637640481225],[149.48199370461234,611.7850028860188],[145.2306243339035,612.2260828230926],[127.74902718913457,618.616182079518],[124.26029196718551,625.028520660502],[122.51592435620972,634.1206978507643],[119.99206880313267,642.1935726654367],[115.87552977916657,648.4094638794887],[110.97528936476097,649.2211992258674],[106.36577688551843,644.9178899238311],[97.59759089895167,640.1660875765361],[94.6144694772851,636.9562117319508],[93.66433687758675,636.7671774732049],[92.6847101395393,637.9162092420518],[89.24653629761895,639.3654718924362],[85.68617245396267,639.4321898661107],[80.19815599672917,640.7109510282149],[70.65048206806011,644.5731803931775],[66.79307011673711,647.1937141369667],[58.503110516271136,654.4214946184227],[56.81562445782862,656.423033828672],[53.8009021736444,663.7138257297097],[49.195603142736786,665.0],[44.984261531217456,660.3260352886583],[40.18935732520407,658.6951514877144],[35.13111259821103,660.2926763018211],[32.072149106501364,662.7760675441674],[30.645896844870762,660.7597021175455],[30.599548913177948,656.612068087418],[34.29263637940939,651.6712314813765],[44.14578531241458,647.9387315096709],[52.7959947455826,638.2535056645198],[57.038937219619584,632.3489649942842],[58.7222098297274,629.0278925269079],[60.79522641088634,626.9114501397737],[63.506580414900526,626.1108344556737],[64.89912508984612,622.44134590355],[76.90955957072401,607.6892606131938],[77.89971992961067,604.3051767262357],[78.49802959327886,598.2523738922779],[79.49029667633286,592.4256708579966],[89.2676035392974,588.6523987912672],[93.94031774357504,576.4022375137226],[95.22541948595986,575.4311203413425],[108.86224502441351,573.1849485609514],[118.97662775423187,573.3628631574181],[129.02148858651285,575.7610036556241],[134.17032245272276,575.9759837930209],[139.3381168364437,575.1494222302701],[143.39145413537594,571.8431759792659],[150.32889682008562,559.9191914619103],[154.23054997893308,554.6707108661451],[158.7010186630982,549.9300281811288],[162.88286613626846,544.5147526511763],[169.666517956726,534.4848172753711],[165.08017944332946,537.9393256900977],[159.5437083302358,543.4213191937254]];

function distanceSquared(p1, p2) {
    const dx = p1[0] - p2[0];
    const dy = p1[1] - p2[1];
    return dx * dx + dy * dy;
}

function distanceToClosestPointOnPolygon(point, polygon) {
    let minDistanceSquared = Infinity;

    for (let i = 0; i < polygon.length; i++) {
        const p1 = polygon[i];
        const p2 = polygon[(i + 1) % polygon.length];

        const distanceSquared = distanceToLineSquared(point, p1, p2);

        if (distanceSquared < minDistanceSquared) {
            minDistanceSquared = distanceSquared;
        }
    }

    return Math.sqrt(minDistanceSquared);
}

function distanceToLineSquared(point, lineStart, lineEnd) {
    const A = point[0] - lineStart[0];
    const B = point[1] - lineStart[1];
    const C = lineEnd[0] - lineStart[0];
    const D = lineEnd[1] - lineStart[1];

    const dot = A * C + B * D;
    const lenSquared = C * C + D * D;
    const param = lenSquared !== 0 ? dot / lenSquared : -1;

    let x, y;
    if (param < 0) {
        x = lineStart[0];
        y = lineStart[1];
    } 
    else if (param > 1) {
        x = lineEnd[0];
        y = lineEnd[1];
    } 
    else {
        x = lineStart[0] + param * C;
        y = lineStart[1] + param * D;
    }

    return distanceSquared(point, [x, y]);
}

function circlesWillOverlap(circle1, circle2) {
    const radiusSum = parseInt(circle1.radius) + parseInt(circle2.radius);
    const distanceBetweenCenters = Math.sqrt(distanceSquared([circle1.x, circle1.y], [circle2.x, circle2.y]));

    return distanceBetweenCenters <= radiusSum;
}

function writeCrater(x, y, radius) {
    //inland
    if (isPointInPolygon([x, y], uk)) {
        //close to the coast is flooded by default
        if (distanceToClosestPointOnPolygon([x, y], uk) <= radius) {
            craters.push({x: x, y: y, active: false, flooded: true, radius: radius});
        }
        else {
            //checks if its near a preflooded crater
            let nearFlood = false;
            //for every other crater
            for (let i = 0; i < craters.length; i++) {
                //if they're in different spots
                if (x != craters[i].x && y != craters[i].y) {
                    let testCircle = {x:x, y:y, radius:radius};
                    //check if they'd overlap
                    if (circlesWillOverlap(testCircle, craters[i])) {
                        //if its overlapping a flooded crater
                        if (craters[i].flooded) {
                            //clearly flooded too  
                            nearFlood = true;
                            break;
                        }
                    }
                }
            }
            //adds to list
            craters.push({x: x, y: y, active: false, flooded: nearFlood, radius: radius});
        }
    }
    //at sea
    else {
        craters.push({x: x, y: y, active: false, flooded: true, radius: radius});
    }
}

function checkNearbyFlooded(circle) {
    for (let i = 0; i < craters.length; i++) {
        if (circle.x != craters[i].x && circle.y != craters[i].y) {
            if (circlesWillOverlap(circle, craters[i]) && !craters[i].flooded) {
                craters[i].flooded = true;
                checkNearbyFlooded(craters[i]);
            }
        }
    }
}

function isPointInPolygon(point, polygon) {
    const x = point[0];
    const y = point[1];

    let inside = false;
    for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {
        const xi = polygon[i][0];
        const yi = polygon[i][1];
        const xj = polygon[j][0];
        const yj = polygon[j][1];

        const intersect =
            ((yi > y) !== (yj > y)) &&
            (x < ((xj - xi) * (y - yi)) / (yj - yi) + xi);

        if (intersect) {
            inside = !inside;
        }
    }

    return inside;
}

function nextFrame() {
    requestId = requestAnimationFrame(nextFrame);
    update();
    draw();
}

function update() {
    //increase the x pos of the plane
    plane.pos.x += splitAngledDistance(plane.angle, plane.speed).x;
    plane.pos.y += splitAngledDistance(plane.angle, plane.speed).y;

    //if the plane is past its target
    if (hasPassedTarget(plane.spawn, plane.target, plane.pos)) {
        //activate and shrink bomb
        if (!bomb.active) {
            bomb.active = true;
            bombDropSound.play();
        }
        bomb.radius -=0.05;

        //if bomb small enough
        if (bomb.radius <= 0.05) {
            //deactivate bomb and activate explosion
            bomb.active = false;
            bombDropSound.pause();
            if (!bomb.explosion.active) {
                boomSound.play();
                bomb.explosion.active = true;
            }

            //timer is the disrance the plane has travelled since the target
            timer = Math.sqrt(distanceSquared([plane.target.x, plane.target.y], [plane.pos.x, plane.pos.y])) * 0.01;

            //if the explosion is large enough
            if (bomb.explosion.radius >= craters[craters.length - 1].radius * 2) {
                //activate the crater
                craters[craters.length - 1].active = true;
                //if the crater is flodded
                if (craters[craters.length - 1].flooded) {
                    //backfill
                    if (!backfill) {
                        backfill = true;
                        checkNearbyFlooded(craters[craters.length - 1]);
                    }
                }
            }
            //if the explosion is too small
            if (bomb.explosion.radius < 0.15) {
                //deactive and cancel animation
                bomb.explosion.active = false;
                if(outOfBounds()){
                    flightSound.pause();
                    isAnimating = false;    
                    cancelAnimationFrame(requestId);
                }
            }
            else {
                //otherwise explosion follows equation
                bomb.explosion.radius = incrementExplosion(craters[craters.length - 1].radius);
            }
        }
    }
}

function outOfBounds() {
    return plane.pos.x > WIDTH + 65 || plane.pos.x < -65 || plane.pos.y > HEIGHT + 50 || plane.pos.y < -50;
}

function hasPassedTarget(origin, givenPoint, targetPoint) {
    // Calculate distances from the origin
    const distanceToGiven = Math.sqrt(distanceSquared([origin.x, origin.y], [givenPoint.x, givenPoint.y]));
    const distanceToTarget = Math.sqrt(distanceSquared([origin.x, origin.y], [targetPoint.x, targetPoint.y]));
  
    // Check if the given point has passed the target point
    return !(distanceToGiven > distanceToTarget);
}

function incrementExplosion(val) {
    //uses an equation to increase or decrease the size of the explosion based on time
   return val * 3 * (-1 * Math.pow(0.5 * (timer + 0.01) - 1, 2) + 1);
}

function draw() {
    //clear the screen
    context.clearRect(0, 0, WIDTH, HEIGHT);

    //draw the uk
    drawUK();

    //for every crater
    for(let i = 0; i < craters.length; i++) {
        //if it is active
        if (craters[i].active) {
            //draw it either flooded or not flooded
            if (craters[i].flooded) {
                drawCircle("rgb(0, 200, 255)", craters[i].radius, craters[i].x, craters[i].y);
            }
            else {
                drawCircle("brown", craters[i].radius, craters[i].x, craters[i].y);
            }
        }
    }

    //if there is an explosion active
    if (bomb.explosion.active) {
        drawCircle("orange", bomb.explosion.radius, plane.target.x, plane.target.y);
    }

    //if there is a bomb active
    if (bomb.active) {
        drawCircle("black", bomb.radius, plane.target.x, plane.target.y);
    }
    
    //Draw the plane
    const image = new Image();
    image.src = planeSprites[plane.sprite];
    const imageWidth = 65;
    const imageHeight = 50;
    
    const angleInRadians = plane.angle * Math.PI / 180;

    context.translate(plane.pos.x, plane.pos.y);
    context.rotate(angleInRadians);
    context.drawImage(image, -imageWidth / 2, -imageHeight / 2, imageWidth, imageHeight);
    context.setTransform(1, 0, 0, 1, 0, 0);
}

function drawCircle(colour, radius, x, y) {
    context.fillStyle = colour;
    context.beginPath();
    context.arc(x, y, radius, 0, Math.PI*2, true);
    context.fill();
}


function drawPlane() {
    // Rotate the canvas
    const angleInRadians = plane.angle * Math.PI / 180;
    context.rotate(angleInRadians);

    const img = new Image();
    img.src = 'plane.png';
    img.onload = function() {
        context.drawImage(img, plane.pos.x, plane.pos.y, 65, 50);
    }
}

function drawAngledElement() {
    // Rotate the canvas
    const angleInRadians = 45 * Math.PI / 180; // 45 degrees in radians
    context.rotate(angleInRadians);

    // Wait for the image to load before drawing
    image.onload = function() {
        context.drawImage(image, -50, -25, 100, 50);

        // Reset transformations
        context.setTransform(1, 0, 0, 1, 0, 0);
    };
}

function drawPlane() {
    // Wait for the image to load before drawing
    image.onload = function() {
        const angleInRadians = (plane.angle * Math.PI) / 180;

        // Translate and rotate the canvas
        context.rotate(angleInRadians);

        // Draw the image centered at the translated and rotated coordinates
        context.drawImage(image, -image.width / 2, -image.height / 2, 65, 50);

        // Reset transformations
        context.setTransform(1, 0, 0, 1, 0, 0);
    };
}

function drawUK() {
    context.fillStyle = "green";
    context.beginPath();
    context.moveTo(0, 0);
    for (let i =0; i<uk.length; i++) {
        context.lineTo(uk[i][0], uk[i][1]);
    }
    context.fill();
}

function click(evt) {
    //only one simulation allowed at once
    if (!isAnimating) {
        isAnimating = true;
        flightSound.play();
        resetVariables();
        writeCrater(evt.offsetX, evt.offsetY, slider.value);

        plane.sprite = Math.floor(Math.random() * 4);

        plane.target.x = evt.offsetX;
        plane.target.y = evt.offsetY;
        plane.pos.y = plane.target.y - 25;

        plane.spawn = getRandomPointOnBorder();
        plane.angle = calculateAngle(plane.spawn, plane.target);

        plane.pos.x = plane.spawn.x - splitAngledDistance(plane.angle, 65).x;
        plane.pos.y = plane.spawn.y - splitAngledDistance(plane.angle, 65).y;

        draw();
        nextFrame();
    }
}

function splitAngledDistance(angle, hypotenuse) {
    // Convert angle to radians
    const radians = (angle * Math.PI) / 180;
  
    // Calculate x and y distances using trigonometric functions
    const xDistance = hypotenuse * Math.cos(radians);
    const yDistance = hypotenuse * Math.sin(radians);
  
    return {x: xDistance, y: yDistance};
}

function calculateAngle(pos1, pos2) {
    const deltaX = pos2.x - pos1.x;
    const deltaY = pos2.y - pos1.y;
    
    // Use Math.atan2 to calculate the angle in radians
    const radians = Math.atan2(deltaY, deltaX);
  
    // Convert radians to degrees
    const degrees = (radians * 180) / Math.PI;
  
    // Ensure the angle is positive (between 0 and 360 degrees)
    const positiveDegrees = (degrees + 360) % 360;
  
    return positiveDegrees;
}

function getRandomPointOnBorder() {
    // Generate a random side (top, right, bottom, or left)
    const side = Math.floor(Math.random() * 4);
  
    // Generate a random position along the chosen side
    let x, y;
    switch (side) {
      case 0: // Top
        x = Math.random() * WIDTH;
        y = 0;
        break;
      case 1: // Right
        x = WIDTH;
        y = Math.random() * HEIGHT;
        break;
      case 2: // Bottom
        x = Math.random() * WIDTH;
        y = HEIGHT;
        break;
      case 3: // Left
        x = 0;
        y = Math.random() * HEIGHT;
        break;
    }
    return {x, y};
}

function resetSite() {
    //Reset site is called on button press
    isAnimating = false;
    flightSound.pause();
    flightSound.currentTime = 0;
    bombDropSound.pause();
    bombDropSound.currentTime = 0;
    boomSound.pause();
    boomSound.currentTime = 0;
    resetVariables();
    cancelAnimationFrame(requestId);
    craters.length = 0;
    draw();
}

function resetVariables() {
    //Reset variables is called between simulations
    backfill = false;
    plane.pos.x = -65;
    plane.pos.y = 0;
    bomb.radius = 5;
    bomb.explosion.radius = 0.5;
    bomb.explosion.peaked = false;
    bomb.active = false;
    bomb.explosion.active = false;
    bombDropSound.currentTime = 0;
}

drawUK();